.SUFFIXES: 
.SUFFIXES: .o .cpp .h .d .l .y
.PHONY : doc clean

LIB		= libmycapd.a

TARGET	= $(LIB)

#CFLAGS	= -O3 -g -ansi -pedantic -Wall -frounding-math -fno-fast-math $(INCLUDES)
CFLAGS	= -O3 -g @RMATH_CXXFLAGS@ -fPIC $(INCLUDES)
#CFLAGS += -D__USE_FILIB__
#CFLAGS += -DEXCEPTION_HACK=1
LDFLAGS = -L$(CAPD_DIR)/lib -fPIC
LIBS	= -lcapd

CXX     = @CXX@
SED     = @SED@
MV      = @MV@
AR      = @AR@
RANLIB  = @RANLIB@
RM      = @RM@
LN      = @LN@
#DOXYGEN = @DOXYGEN@

SRC     = $(wildcard *.c) $(wildcard *.cc) $(wildcard *.cpp)
SRC_EX  = $(SRC) $(wildcard *.h)
OBJECT  = $(foreach file, $(SRC), $(basename $(file)).o)
OBJ_COMMON = MapEx.o Parallelepiped.o util.o PrintDriverJson.o PrintDriverMath.o sendingHandler.o firstzero.o simulatingHandler.o

DEP_FILE = $(OBJECT:.o=.d)

all: 
	@for t in $(TARGET); do \
	if [ ! -z $$t ]; then ${MAKE} $$t; fi \
	done

clean:
	-$(RM) -f $(TARGET) $(OBJECT) $(DEP_FILE) *~

ifneq "$(MAKECMDGOALS)" "clean"
  -include $(DEP_FILE)
endif

$(LIB): $(OBJECT)
	$(AR) cru $@ $(OBJ_COMMON)
	$(RANLIB) $@

.c.o .cc.o .cpp.o:
	$(CXX) $(CFLAGS) -c $<

.c.d .cc.d .cpp.d:
	$(CXX) $(CFLAGS) -M $< | \
	$(SED) 's,\($(notdir $*)\.o\) *:,$(dir $@)\1 $@: $(MAKE_INC) $(MAKE_CFG) ,' >$@.tmp
	$(MV) $@.tmp $@

