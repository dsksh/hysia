#let pertb = [-1e-10,1e-10]
let pertb = 0

let g = 1
let c = 1

var   y{% for i in range(1,n) %},x{{i}}{% endfor %},
      vy{% for i in range(1,n) %},vx{{i}}{% endfor %}

init  Loc,
      2+pertb{% for i in range(1,n) %},1+pertb{% endfor %},
      #1+pertb{% for i in range(1,n) %},0+pertb{% endfor %},
      0{% for i in range(1,n) %},0{% endfor %}

at Loc wait vy{% for i in range(1,n) %},vx{{i}}{% endfor %},
            -g{% for i in range(1,n) %},0{% endfor %}
  watch (x1^2/{{n}}{% for i in range(2,n) %}+x{{i}}^2/{{n}}{% endfor %}-y,
         vy{% for i in range(1,n) %}-2*x{{i}}*vx{{i}}/{{n}}{% endfor %}) goto Loc then 
    y{% for i in range(1,n) %},x{{i}}{% endfor %},
    vy  - (2*{{n}}*({{n}}*vy{% for i in range(1,n) %} - 2*x{{i}}*vx{{i}}{% endfor %})) / ({{n}}^2{% for i in range(1,n) %} + 4*x{{i}}^2{% endfor %}){% for i in range(1,n) %},
    vx{{i}} + (4*x{{i}}*({{n}}*vy{% for j in range(1,n) %} - 2*x{{j}}*vx{{j}}{% endfor %})) / ({{n}}^2{% for j in range(1,n) %} + 4*x{{j}}^2{% endfor %}){% endfor %}
end

param order = 20
param t_max = 10
param h_min   = 1e-14
param epsilon = 1e-14
#param epsilon = 0
#param dump_interval = 0.01
param dump_interval = -1
#param delta = 0.99
#param tau = 1.01

# char_mtx 1: QR, 2: inverse, 3: ident, -1: hybrid
#param char_mtx = -1
#param char_mtx = 1
param char_mtx = 3
#param qr_thres = 100
